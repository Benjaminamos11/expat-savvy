---
import BaseLayout from './BaseLayout.astro';
import ConsultationModal from '../components/consultation/ConsultationModal.astro';
import FAQ from '../components/FAQ.astro';
const { frontmatter } = Astro.props;

// Function to generate social sharing URLs
const getShareUrls = (url: string, title: string) => ({
  twitter: `https://twitter.com/intent/tweet?url=${encodeURIComponent(url)}&text=${encodeURIComponent(title)}`,
  facebook: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`,
  linkedin: `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`,
  whatsapp: `https://wa.me/?text=${encodeURIComponent(`${title} ${url}`)}`
});

const currentUrl = Astro.url.href;
const shareUrls = getShareUrls(currentUrl, frontmatter.title);
---

<BaseLayout 
  title={frontmatter.title}
  description={frontmatter.description}
  type="article"
  publishDate={frontmatter.date}
>
  <article class="max-w-5xl mx-auto px-4 py-8">
    <!-- Hero Image -->
    <div class="relative w-full aspect-[16/9] mb-12 bg-white flex items-center justify-center hero-image-container">
      <img 
        src={frontmatter.image || "https://res.cloudinary.com/dphbnwjtx/image/upload/v1746849106/a-hand-drawn-style-illustration-of-a-swi_q72d2DQuS9GBc1WmPIaaCw_008krU2iTMW5Xa_C75c0rQ_ud00f1.webp"} 
        alt={`Illustration for ${frontmatter.title}`} 
        class="w-full h-full object-contain object-center hero-img rounded-lg"
        width="1600" height="400"
      />
      <div class="absolute inset-0 bg-gradient-to-b from-transparent to-black/30 pointer-events-none rounded-lg"></div>
    </div>

    <header class="mb-8">
      <h1 class="text-4xl font-bold mb-4 text-gray-900">{frontmatter.title || 'Expat Savvy Article'}</h1>
      {frontmatter.date && (
        <time datetime={
          frontmatter.date instanceof Date 
            ? frontmatter.date.toISOString() 
            : (typeof frontmatter.date === 'string'
                ? new Date(frontmatter.date).toISOString()
                : new Date().toISOString())
        } class="text-gray-600">
          {
            frontmatter.date instanceof Date 
              ? frontmatter.date.toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })
              : (typeof frontmatter.date === 'string'
                  ? new Date(frontmatter.date).toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })
                  : new Date().toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'long', 
                      day: 'numeric'
                    })
                )
          }
        </time>
      )}
    </header>

    <div class="prose prose-lg max-w-none prose-headings:text-gray-900 prose-p:text-gray-700 prose-a:text-primary-500 hover:prose-a:text-primary-600">
      <slot />
    </div>
    
    <!-- FAQ Section - only show for gym-related articles -->
    {frontmatter.title && frontmatter.title.toLowerCase().includes("gym") && (
      <div class="mt-12 pt-8 border-t border-gray-200">
        <FAQ 
          items={[
            {
              question: 'What insurance pays the most for the gym?',
              answer: 'SWICA pays up to 1300 CHF per year for gym memberships with the right supplementary coverage. <a href="/healthcare/all-insurances/swica" class="text-primary-500 hover:text-primary-600 underline">Learn more about SWICA coverage</a>.'
            },
            {
              question: 'How much does a gym membership cost in Switzerland?',
              answer: 'Gym memberships in Switzerland typically range from 80-150 CHF per month, with premium facilities costing up to 200 CHF. Many insurance companies offer partial reimbursement through supplementary coverage.'
            },
            {
              question: 'Which Swiss health insurance covers fitness activities?',
              answer: 'Most Swiss health insurance providers offer supplementary coverage for fitness activities. Popular options include SWICA, CSS, and Helsana, each with different coverage levels and requirements.'
            },
            {
              question: 'Do I need a doctor\'s prescription for gym coverage?',
              answer: 'Yes, most insurance providers require a doctor\'s prescription stating that regular exercise is beneficial for your health. This prescription needs to be renewed annually.'
            },
            {
              question: 'What types of fitness activities are covered by Swiss insurance?',
              answer: 'Swiss health insurance typically covers gym memberships, fitness classes, swimming, and other structured fitness activities. Coverage varies by provider and plan.'
            },
            {
              question: 'How do I claim gym reimbursement from my Swiss insurance?',
              answer: 'To claim gym reimbursement, you\'ll need to submit your gym membership receipt, doctor\'s prescription, and proof of regular attendance. Most insurers process claims quarterly or annually.'
            }
          ]} 
          showHeading={true}
        />
      </div>
    )}

    <!-- Rating System -->
    <div class="mt-12 pt-8 border-t border-gray-200">
      <h3 class="text-xl font-semibold mb-4 text-gray-900">Rate this article</h3>
      <div class="flex items-center space-x-2" id="rating-container">
        {[1, 2, 3, 4, 5].map((star) => (
          <button
            class="text-2xl text-gray-300 hover:text-yellow-400 transition-colors cursor-pointer"
            data-rating={star}
          >
            ★
          </button>
        ))}
      </div>
    </div>

    <!-- Social Sharing -->
    <div class="mt-12 pt-8 border-t border-gray-200">
      <h3 class="text-xl font-semibold mb-4 text-gray-900">Share this article</h3>
      <div class="flex space-x-4">
        <a
          href={shareUrls.twitter}
          target="_blank"
          rel="noopener noreferrer"
          class="text-gray-400 hover:text-gray-600 transition-colors"
          title="Share on Twitter"
        >
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
            <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
          </svg>
        </a>
        <a
          href={shareUrls.facebook}
          target="_blank"
          rel="noopener noreferrer"
          class="text-gray-400 hover:text-gray-600 transition-colors"
          title="Share on Facebook"
        >
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
            <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
          </svg>
        </a>
        <a
          href={shareUrls.linkedin}
          target="_blank"
          rel="noopener noreferrer"
          class="text-gray-400 hover:text-gray-600 transition-colors"
          title="Share on LinkedIn"
        >
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
          </svg>
        </a>
        <a
          href={shareUrls.whatsapp}
          target="_blank"
          rel="noopener noreferrer"
          class="text-gray-400 hover:text-gray-600 transition-colors"
          title="Share on WhatsApp"
        >
          <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
            <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
          </svg>
        </a>
      </div>
    </div>
    
    <!-- Author Section -->
    <div class="mt-12 pt-8 border-t border-gray-200">
      <div class="flex items-center space-x-4">
        <img 
          src="https://res.cloudinary.com/dphbnwjtx/image/upload/v1746901773/profilbild_o8hffb_1_b9n3xx.webp" 
          alt="Benjamin Amos Wagner" 
          class="w-16 h-16 rounded-full object-cover"
        />
        <div>
          <h3 class="font-bold text-lg text-gray-900">Benjamin Amos Wagner</h3>
          <p class="text-gray-600">Founder of Expat Savvy</p>
        </div>
      </div>
    </div>

    <!-- Floating CTA Banner -->
    <div id="floating-cta" class="fixed bottom-6 left-1/2 -translate-x-1/2 z-50 bg-gradient-to-r from-primary-600 to-primary-500 text-white px-8 py-4 rounded-lg shadow-xl flex flex-col sm:flex-row justify-between items-center space-y-2 sm:space-y-0 sm:space-x-4 transition-all w-full max-w-5xl border border-primary-400/20 backdrop-blur-sm">
      <span class="font-semibold text-center sm:text-left">Need help choosing insurance?</span>
      <button
        class="bg-white text-primary-600 px-6 py-2 rounded-md font-semibold hover:bg-gray-100 transition-colors whitespace-nowrap text-base safe-consultation-btn"
        data-safe-btn="true"
        data-open-consultation="true"
      >
        Free Consultation
      </button>
    </div>
  </article>

  <ConsultationModal />

  <!-- BlogPosting Schema Markup -->
  <script type="application/ld+json" slot="head" define:vars={{ title: Astro.props.title, description: Astro.props.description, image: Astro.props.image, author: Astro.props.author, publishDate: Astro.props.publishDate, modifiedDate: Astro.props.modifiedDate }}>
  {
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": Astro.url
    },
    "headline": title,
    "description": description,
    "image": image,
    "author": {
      "@type": "Person",
      "name": author?.name || "Expat Savvy Team"
    },
    "publisher": {
      "@type": "Organization",
      "name": "Expat Savvy",
      "logo": {
        "@type": "ImageObject",
        "url": "https://res.cloudinary.com/dphbnwjtx/image/upload/v1740080077/logoexpatsavvy_sykutm.svg",
        "width": 600,
        "height": 60
      }
    },
    "datePublished": publishDate,
    "dateModified": modifiedDate || publishDate,
    "aggregateRating": {
      "@type": "AggregateRating",
      "ratingValue": "4.8",
      "ratingCount": "27",
      "bestRating": "5",
      "worstRating": "1"
    }
  }
  </script>

  <!-- Gym-specific FAQ Schema Markup -->
  {frontmatter.title && frontmatter.title.toLowerCase().includes("gym") && (
    <script type="application/ld+json" set:html={JSON.stringify({
      '@context': 'https://schema.org',
      '@type': 'FAQPage',
      'mainEntity': [
        {
          '@type': 'Question',
          'name': 'What insurance pays the most for the gym?',
          'acceptedAnswer': {
            '@type': 'Answer',
            'text': 'SWICA pays up to 1300 CHF per year for gym memberships with the right supplementary coverage. See https://expat-savvy.ch/healthcare/all-insurances/swica for details.'
          }
        },
        {
          '@type': 'Question',
          'name': 'How much does a gym membership cost in Switzerland?',
          'acceptedAnswer': {
            '@type': 'Answer',
            'text': 'Gym memberships in Switzerland typically range from 80-150 CHF per month, with premium facilities costing up to 200 CHF. Many insurance companies offer partial reimbursement through supplementary coverage.'
          }
        },
        {
          '@type': 'Question',
          'name': 'Which Swiss health insurance covers fitness activities?',
          'acceptedAnswer': {
            '@type': 'Answer',
            'text': 'Most Swiss health insurance providers offer supplementary coverage for fitness activities. Popular options include SWICA, CSS, and Helsana, each with different coverage levels and requirements.'
          }
        },
        {
          '@type': 'Question',
          'name': 'Do I need a doctor\'s prescription for gym coverage?',
          'acceptedAnswer': {
            '@type': 'Answer',
            'text': 'Yes, most insurance providers require a doctor\'s prescription stating that regular exercise is beneficial for your health. This prescription needs to be renewed annually.'
          }
        },
        {
          '@type': 'Question',
          'name': 'What types of fitness activities are covered by Swiss insurance?',
          'acceptedAnswer': {
            '@type': 'Answer',
            'text': 'Swiss health insurance typically covers gym memberships, fitness classes, swimming, and other structured fitness activities. Coverage varies by provider and plan.'
          }
        },
        {
          '@type': 'Question',
          'name': 'How do I claim gym reimbursement from my Swiss insurance?',
          'acceptedAnswer': {
            '@type': 'Answer',
            'text': 'To claim gym reimbursement, you\'ll need to submit your gym membership receipt, doctor\'s prescription, and proof of regular attendance. Most insurers process claims quarterly or annually.'
          }
        }
      ]
    }, null, 2)} />
  )}

  <!-- Dynamic FAQ Schema for better SEO for all non-gym posts -->
  {frontmatter.title && !frontmatter.title.toLowerCase().includes("gym") && (
    <script type="application/ld+json" set:html={JSON.stringify({
      '@context': 'https://schema.org',
      '@type': 'FAQPage',
      'mainEntity': [
        {
          '@type': 'Question',
          'name': `What should expats know about ${(frontmatter.title || '').split(':')[0] || ''}?`,
          'acceptedAnswer': {
            '@type': 'Answer',
            'text': frontmatter.description || `Learn everything about ${frontmatter.title || 'insurance topics'} for expats in Switzerland on our comprehensive guide at Expat Savvy.`
          }
        },
        {
          '@type': 'Question',
          'name': 'How can expats get personal insurance advice in Switzerland?',
          'acceptedAnswer': {
            '@type': 'Answer',
            'text': 'Expats can get personalized insurance advice through a free consultation with our experts who specialize in expat insurance needs in Switzerland. Visit https://expat-savvy.ch/free-consultation for more information.'
          }
        },
        {
          '@type': 'Question',
          'name': 'Is insurance mandatory for expats in Switzerland?',
          'acceptedAnswer': {
            '@type': 'Answer',
            'text': 'Yes, health insurance (KVG/LAMal) is mandatory for all residents in Switzerland, including expats. You must obtain coverage within three months of arrival, and it is retroactive to your arrival date.'
          }
        }
      ]
    }, null, 2)} />
  )}

  <!-- Add AggregateRating and FAQ Schema if available -->
  {Astro.props.aggregateRating && (
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "BlogPosting",
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": Astro.url
      },
      "headline": Astro.props.title,
      "description": Astro.props.description,
      "image": Astro.props.image,
      "author": {
        "@type": "Person",
        "name": Astro.props.author
      },
      "publisher": {
        "@type": "Organization",
        "name": "Expat Savvy",
        "logo": {
          "@type": "ImageObject",
          "url": "https://res.cloudinary.com/dphbnwjtx/image/upload/v1740080077/logoexpatsavvy_sykutm.svg",
          "width": 600,
          "height": 60
        }
      },
      "datePublished": Astro.props.publishDate,
      "dateModified": Astro.props.modifiedDate || Astro.props.publishDate,
      "aggregateRating": {
        "@type": "AggregateRating",
        "ratingValue": Astro.props.aggregateRating.ratingValue || "4.8",
        "ratingCount": Astro.props.aggregateRating.ratingCount || "27",
        "bestRating": "5",
        "worstRating": "1"
      }
    })} />
  )}

  <!-- Add FAQ Schema if available -->
  {Astro.props.faqs && Astro.props.faqs.length > 0 && (
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "FAQPage",
      "mainEntity": Astro.props.faqs.map(faq => ({
        "@type": "Question",
        "name": faq.question,
        "acceptedAnswer": {
          "@type": "Answer",
          "text": faq.answer
        }
      }))
    })} />
  )}
</BaseLayout>

<script>
  // Rating system functionality
  document.addEventListener('DOMContentLoaded', () => {
    const stars = document.querySelectorAll('#rating-container button');
    
    stars.forEach((star) => {
      star.addEventListener('click', () => {
        const rating = parseInt(star.getAttribute('data-rating') || '0');
        
        // Update star colors
        stars.forEach((s, index) => {
          if (index < rating) {
            s.classList.remove('text-gray-300');
            s.classList.add('text-yellow-400');
          } else {
            s.classList.remove('text-yellow-400');
            s.classList.add('text-gray-300');
          }
        });

        // Update schema rating
        updateSchemaRating(rating);
      });
    });
  });

  function updateSchemaRating(rating: number) {
    // Get all JSON-LD scripts
    const schemas = document.querySelectorAll('script[type="application/ld+json"]');
    
    // Find the BlogPosting schema
    schemas.forEach(schema => {
      try {
        const content = schema.textContent || '{}';
        if (!content.trim()) return;
        
        const data = JSON.parse(content);
        if (data && data['@type'] === 'BlogPosting') {
          // Add or update aggregateRating
          data.aggregateRating = {
            '@type': 'AggregateRating',
            ratingValue: rating,
            bestRating: 5,
            worstRating: 1,
            ratingCount: 1
          };
          
          // Replace the content with the updated JSON
          const updatedContent = JSON.stringify(data, null, 2);
          schema.textContent = updatedContent;
        }
      } catch (error) {
        console.error('Error updating schema rating:', error);
      }
    });
  }
</script>

<style>
  @media (max-width: 640px) {
    .hero-image-container {
      aspect-ratio: 16/9;
      height: auto !important;
      min-height: 120px !important;
      max-height: 240px !important;
      background: #fff;
      border-radius: 1.25rem;
    }
    .hero-img {
      object-fit: contain !important;
      width: 100% !important;
      height: 100% !important;
      min-height: 120px !important;
      max-height: 240px !important;
      display: block;
      margin: 0 auto;
      border-radius: 1rem !important;
    }
    #floating-cta {
      padding: 0.75rem 1rem !important;
      width: 90% !important;
      font-size: 0.9rem !important;
    }
    #floating-cta button {
      padding: 0.5rem 1rem !important;
      font-size: 0.9rem !important;
    }
  }
  
  /* Add rounded corners to all images in blog content */
  :global(.prose img) {
    border-radius: 0.5rem;
  }
</style> 

<!-- Emergency modal handling specifically for blog posts -->
<script is:inline>
  // Simple blog protection - Prevent unexpected modal behavior
  (function() {
    console.log("🔍 Blog Modal Protection active");
    
    // Blog pages should never show consultation modals automatically
    // Only allow them to be opened via explicit user action
    
    document.addEventListener('DOMContentLoaded', function() {
      // Find any consultation modal
      const modal = document.getElementById('consultation-modal');
      
      // Ensure the modal is hidden on blog pages
      if (modal && !modal.classList.contains('hidden')) {
        console.log("Hiding modal on blog page");
        modal.classList.add('hidden');
      }
      
      // Enhanced button handling for blog pages
      const safeButtons = document.querySelectorAll('.safe-consultation-btn');
      safeButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          e.preventDefault();
          
          const modal = document.getElementById('consultation-modal');
          if (modal) {
            // Remove hidden class and add modal-open class to body
            modal.classList.remove('hidden');
            document.body.classList.add('modal-open');
            
            // Properly reset modal to first step if needed
            const firstStep = document.getElementById('consultation-step-1');
            if (firstStep) {
              document.querySelectorAll('.modal-step').forEach(step => {
                step.classList.add('hidden');
                step.classList.remove('active');
              });
              firstStep.classList.remove('hidden');
              firstStep.classList.add('active');
            }
            
            // Dispatch the modalOpened event to properly initialize
            document.dispatchEvent(new CustomEvent('modalOpened', {
              detail: { modalId: 'consultation-modal' }
            }));
          }
        });
      });
      
      // Ensure closing works
      if (modal) {
        // Close on backdrop click
        modal.addEventListener('click', function(e) {
          if (e.target === this) {
            console.log("Closing modal via backdrop click");
            if (typeof window.closeConsultationModal === 'function') {
              window.closeConsultationModal();
            } else {
              this.classList.add('hidden');
              document.body.classList.remove('modal-open');
            }
          }
        });
        
        // Close button
        const closeButton = modal.querySelector('#close-modal-btn');
        if (closeButton) {
          closeButton.addEventListener('click', function() {
            console.log("Closing modal via close button");
            if (typeof window.closeConsultationModal === 'function') {
              window.closeConsultationModal();
            } else {
              modal.classList.add('hidden');
              document.body.classList.remove('modal-open');
            }
          });
        }
      }
    });
    
    // Block automatic opening but allow manual opening
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        const modal = document.getElementById('consultation-modal');
        if (modal && !modal.classList.contains('hidden')) {
          console.log("Closing modal via ESC key");
          if (typeof window.closeConsultationModal === 'function') {
            window.closeConsultationModal();
          } else {
            modal.classList.add('hidden');
            document.body.classList.remove('modal-open');
          }
        }
      }
    });
  })();
</script>