---
// Define props
interface Props {
  insuranceType: string;
  contextTitle?: string;
  providerName?: string;
}

const { insuranceType = 'health', contextTitle = 'Insurance Consultation', providerName = '' } = Astro.props;

// Generate appropriate topics based on insurance type
let topicOptions = [
  { value: "health-insurance", label: "Health Insurance" },
  { value: "new-insurance", label: "Setting Up Health Insurance" },
  { value: "3rd-pillar", label: "3rd Pillar & Pension" },
  { value: "liability-insurance", label: "Household & Liability" },
  { value: "life-insurance", label: "Life Insurance" },
  { value: "legal-insurance", label: "Legal Protection" },
  { value: "other", label: "Other Insurance Question" }
];

// Determine pre-selected topic based on insurance type
let defaultTopic = "health-insurance";

if (insuranceType === 'new-health') {
  defaultTopic = "new-insurance";
} else if (insuranceType === 'pension') {
  defaultTopic = "3rd-pillar";
} else if (insuranceType === 'liability' || insuranceType === 'household') {
  defaultTopic = "liability-insurance";
} else if (insuranceType === 'life') {
  defaultTopic = "life-insurance";
} else if (insuranceType === 'legal') {
  defaultTopic = "legal-insurance";
}

// Generate title and description based on context
let formTitle = "Tell us about yourself";
let formDescription = "Share a few details so we can personalize your consultation.";

if (providerName) {
  formTitle = `Tell us about your ${providerName} insurance needs`;
  formDescription = `Help us understand your situation to provide tailored advice about ${providerName} options.`;
} else if (contextTitle) {
  formTitle = "Tell us about yourself";
  formDescription = `Share a few details so we can personalize your ${contextTitle.toLowerCase()}.`;
}
---

<div class="form-step">
  <div class="text-center mb-8">
    <h2 class="text-2xl sm:text-3xl font-extrabold text-gray-900">{formTitle}</h2>
    <p class="mt-3 text-gray-600 max-w-2xl mx-auto">
      {formDescription}
    </p>
  </div>
  
  <div class="max-w-xl mx-auto">
    <form id="consultation-form" class="space-y-6">
      <!-- Name -->
      <div>
        <label for="consultation-name" class="block text-sm font-medium text-gray-700">
          Your Name
        </label>
        <div class="mt-1">
          <input
            type="text"
            name="name"
            id="consultation-name"
            class="shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md"
            placeholder="John Smith"
            required
          />
        </div>
      </div>
      
      <!-- Email -->
      <div>
        <label for="consultation-email" class="block text-sm font-medium text-gray-700">
          Email Address
        </label>
        <div class="mt-1">
          <input
            type="email"
            name="email"
            id="consultation-email"
            class="shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md"
            placeholder="john@example.com"
            required
          />
        </div>
        <p class="mt-1 text-xs text-gray-500">We'll send your appointment confirmation here</p>
      </div>
      
      <!-- Phone (Optional) -->
      <div>
        <label for="consultation-phone" class="block text-sm font-medium text-gray-700">
          Phone Number (Optional)
        </label>
        <div class="mt-1">
          <input
            type="tel"
            name="phone"
            id="consultation-phone"
            class="shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md"
            placeholder="+41 76 123 45 67"
          />
        </div>
        <p class="mt-1 text-xs text-gray-500">For appointment reminders or if we need to reschedule</p>
      </div>
      
      <!-- Topic Dropdown -->
      <div>
        <label for="consultation-topic" class="block text-sm font-medium text-gray-700">
          What would you like to discuss?
        </label>
        <div class="mt-1">
          <select
            id="consultation-topic"
            name="topic"
            class="shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md"
          >
            {topicOptions.map((option) => (
              <option value={option.value} selected={option.value === defaultTopic}>{option.label}</option>
            ))}
          </select>
        </div>
      </div>
      
      <!-- How did you hear about us? -->
      <div>
        <label for="consultation-source" class="block text-sm font-medium text-gray-700">
          How did you hear about us?
        </label>
        <div class="mt-1">
          <select
            id="consultation-source"
            name="source"
            class="shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md"
          >
            <option value="google">Google Search</option>
            <option value="social">Social Media</option>
            <option value="friend">Friend/Colleague</option>
            <option value="advertisement">Advertisement</option>
            <option value="other">Other</option>
          </select>
        </div>
      </div>
      
      <!-- Additional Information -->
      <div>
        <label for="consultation-notes" class="block text-sm font-medium text-gray-700">
          Additional Information (Optional)
        </label>
        <div class="mt-1">
          <textarea
            id="consultation-notes"
            name="notes"
            rows="3"
            class="shadow-sm focus:ring-primary-500 focus:border-primary-500 block w-full sm:text-sm border-gray-300 rounded-md"
            placeholder="Share any specific questions or details about your situation that would help us prepare for your consultation..."
          ></textarea>
        </div>
        <p class="mt-1 text-xs text-gray-500">Feel free to include any specifics about your current insurance, concerns, or questions</p>
      </div>
      
      <!-- Security Note -->
      <div class="rounded-md bg-gray-50 p-4 border border-gray-200">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-3 flex-1 md:flex md:justify-between">
            <p class="text-xs text-gray-500">
              Your data is secure and will only be used to provide you with the requested consultation service. See our <a href="/privacy-policy" class="text-primary-600 hover:text-primary-500">privacy policy</a> for details.
            </p>
          </div>
        </div>
      </div>
    </form>
    
    <!-- Navigation Buttons -->
    <div class="mt-8 flex justify-between">
      <button 
        type="button" 
        class="modal-prev-btn flex items-center justify-center px-6 py-3 border border-gray-300 shadow-sm text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
        data-current-step="2"
      >
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
        Back
      </button>
      
      <button 
        type="submit" 
        class="modal-next-btn inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
        data-current-step="2"
      >
        Continue to Calendar
        <svg class="ml-2 -mr-1 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </button>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('consultation-form');
    const nextBtn = document.querySelector('.modal-next-btn[data-current-step="2"]');
    
    if (form && nextBtn) {
      // Store form data when next button is clicked
      nextBtn.addEventListener('click', function(e) {
        // Get form elements
        const nameInput = document.getElementById('consultation-name') as HTMLInputElement;
        const emailInput = document.getElementById('consultation-email') as HTMLInputElement;
        const phoneInput = document.getElementById('consultation-phone') as HTMLInputElement;
        const topicSelect = document.getElementById('consultation-topic') as HTMLSelectElement;
        const sourceSelect = document.getElementById('consultation-source') as HTMLSelectElement;
        const preferredLanguage = document.querySelector('input[name="language"]:checked') as HTMLInputElement;
        const notesInput = document.getElementById('consultation-notes') as HTMLTextAreaElement;
        
        // Basic validation
        if (!nameInput?.value || !emailInput?.value) {
          e.preventDefault(); // Don't proceed to next step
          alert('Please fill in your name and email to continue.');
          return;
        }
        
        // Email validation
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(emailInput.value)) {
          e.preventDefault(); // Don't proceed to next step
          alert('Please enter a valid email address.');
          return;
        }
        
        // Collect form data
        const formData = {
          name: nameInput?.value || '',
          email: emailInput?.value || '',
          phone: phoneInput?.value || '',
          topic: topicSelect?.value || '',
          source: sourceSelect?.value || '',
          preferredLanguage: preferredLanguage?.value || 'en',
          notes: notesInput?.value || '',
          dateSubmitted: new Date().toISOString(),
          insuranceType: document.querySelector('#consultation-modal')?.getAttribute('data-insurance-type') || 'health'
        };
        
        // Store in sessionStorage for access in other steps
        sessionStorage.setItem('consultationFormData', JSON.stringify(formData));
        console.log('Form data stored in session:', formData);
        
        // Let the next button handler in ConsultationModal.astro handle the transition
      });
    }
  });
</script> 