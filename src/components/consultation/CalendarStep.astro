---
import ButtonRow from './ButtonRow.astro';

// Calendar step takes the insurance type as a prop to determine which calendar link to use
interface Props {
  insuranceType: string;
}

const { insuranceType = 'health' } = Astro.props;

// Dynamic calendar URL based on insurance type
let calendarUrl = "https://cal.com/robertkolar/expat-savvy";

// Special pages get unique calendars
if (insuranceType === 'new-health') {
  calendarUrl = "https://cal.com/robertkolar/setting-up-health-insurance-in-switzerland";
} else if (insuranceType === 'pension') {
  calendarUrl = "https://cal.com/robertkolar/third-pillar-pension-solutions";
} else if (insuranceType === 'liability' || insuranceType === 'household') {
  calendarUrl = "https://cal.com/robertkolar/household-liability-insurance";
}
---

<div class="calendar-step-container">
  <h2 class="text-2xl md:text-3xl font-bold text-gray-900 mb-3 text-center">Schedule Your Free Consultation</h2>
  <p class="text-gray-600 mb-6 text-center text-sm md:text-base">Choose a convenient time for a 30-minute video call with our insurance expert.</p>
  
  <div id="cal-booking-placeholder" class="cal-container">
    <!-- Cal.com will be embedded here -->
    <div class="flex justify-center items-center h-60 mb-4">
      <div class="animate-pulse flex flex-col items-center">
        <div class="rounded-full bg-gray-200 h-16 w-16 mb-4"></div>
        <div class="h-2 bg-gray-200 rounded w-48 mb-2.5"></div>
        <div class="h-2 bg-gray-200 rounded w-40"></div>
      </div>
    </div>
  </div>
  
  <div class="mt-4 text-center calendar-note">
    <p class="text-sm text-gray-500">Having trouble with the calendar? <a href={calendarUrl} target="_blank" class="text-primary-600 underline">Open in new window</a></p>
  </div>
  
  <ButtonRow 
    prevButtonText="Previous"
    prevButtonStep={2}
    hideNextButton={true}
  />
</div>

<script define:vars={{ calendarUrl }}>
  // Initialize Cal.com embed after a short delay
  setTimeout(() => {
    try {
      const calElement = document.getElementById('cal-booking-placeholder');
      
      if (!calElement) return;
      
      // Attempt to clear previous content
      calElement.innerHTML = '';
      
      // Check if we already have user data from previous step
      let userName = '';
      let userEmail = '';
      
      try {
        const formData = JSON.parse(sessionStorage.getItem('consultationFormData') || '{}');
        userName = formData.name || '';
        userEmail = formData.email || '';
      } catch (e) {
        // Silent fail
      }
      
      // Check if mobile device
      const isMobile = window.innerWidth <= 640;
      
      if (isMobile) {
        // For mobile, open in new window
        window.open(calendarUrl, '_blank');
      } else {
        // For desktop, use inline embedding
        if (window.Cal) {
          // Configure Cal.com parameters
          const config = {
            calLink: calendarUrl.replace('https://cal.com/', ''),
            config: {
              name: userName,
              email: userEmail,
              hideEventTypeDetails: false,
              hideBranding: true,
              layout: 'month_view',
            },
            embedType: 'inline',
            uiInMobile: 'small_calendar'
          };
          
          // Create the Cal instance
          const cal = window.Cal.ns["00000"];
          
          if (!cal) {
            window.Cal.ns["00000"] = new (window.Cal?.inline?.Calendar || window.Cal?.Calendar)();
            window.Cal.ns["00000"].init(config, {
              elementOrSelector: '#cal-booking-placeholder',
              embededOverlayable: false
            });
          }
        } else {
          // Fallback to iframe
          const iframe = document.createElement('iframe');
          iframe.src = `${calendarUrl}?embed=true&name=${encodeURIComponent(userName)}&email=${encodeURIComponent(userEmail)}`;
          iframe.width = '100%';
          iframe.height = '600px';
          iframe.frameBorder = '0';
          calElement.appendChild(iframe);
        }
      }
    } catch (e) {
      console.error('Error initializing calendar:', e);
      // Fallback content
      const calElement = document.getElementById('cal-booking-placeholder');
      if (calElement) {
        calElement.innerHTML = `
          <div class="text-center p-4 border border-gray-200 rounded-lg mb-4">
            <p class="mb-3">There was an issue loading the calendar.</p>
            <a href="${calendarUrl}" target="_blank" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700">
              Open Booking Calendar
            </a>
          </div>
        `;
      }
    }
  }, 300);
</script>

<style>
  .calendar-step-container {
    padding: 0 0.5rem;
  }
  
  .cal-container {
    margin: 0 auto;
    width: 100%;
    max-width: 100%;
    overflow: hidden;
    border-radius: 0.5rem;
  }
  
  /* Mobile optimizations */
  @media (max-width: 640px) {
    .calendar-step-container {
      padding: 0;
    }
    
    .calendar-step-container h2 {
      font-size: 1.5rem;
      margin-bottom: 0.5rem;
    }
    
    .calendar-step-container p {
      margin-bottom: 0.75rem;
    }
    
    .calendar-note {
      margin-top: 0.5rem;
      font-size: 0.7rem;
    }
    
    .cal-container {
      border-radius: 0.375rem;
    }
  }
  
  /* Very small screen optimization */
  @media (max-width: 375px) {
    .calendar-step-container h2 {
      font-size: 1.25rem;
    }
    
    .calendar-step-container p {
      font-size: 0.8rem;
    }
  }
</style> 