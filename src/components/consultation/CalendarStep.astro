---
// Calendar step takes the insurance type as a prop to determine which calendar link to use
interface Props {
  insuranceType: string;
}

const { insuranceType = 'health' } = Astro.props;

// Determine which Cal.com link to use based on insurance type
let calLink = "robertkolar/expat-savvy"; // default fallback

switch(insuranceType) {
  case 'health':
    calLink = "robertkolar/change-health-insurance";
    break;
  case 'new-health':
    calLink = "robertkolar/setting-up-health-insurance-in-switzerland";
    break;
  case 'liability':
  case 'household':
    calLink = "robertkolar/household-liability-insurance";
    break;
  case 'pension':
    calLink = "robertkolar/third-pillar-pension-solutions";
    break;
  default:
    calLink = "robertkolar/expat-savvy";
}
---

<div class="calendar-step">
  <h2 class="text-2xl sm:text-3xl font-extrabold mb-6 text-gray-900 text-center">Book Your Consultation</h2>
  
  <div class="text-center mb-8">
    <p class="text-gray-600 mb-2">Our consultants are available 7 days a week, including evenings.</p>
    <p class="text-gray-600">Choose the option that works best for you:</p>
  </div>
  
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto mb-10">
    <!-- Cal.com Button Option -->
    <div class="bg-white rounded-xl shadow-md border border-gray-100 p-6 text-center hover:shadow-lg transition-shadow">
      <div class="w-16 h-16 mx-auto mb-4 bg-red-50 rounded-full flex items-center justify-center">
        <svg class="w-8 h-8 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
        </svg>
      </div>
      <h3 class="text-lg font-semibold mb-2">Online Calendar</h3>
      <p class="text-gray-600 mb-4">Book a specific time slot through our online calendar system.</p>
      <button id="cal-button" class="cal-btn inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
        Open Calendar
      </button>
    </div>
    
    <!-- WhatsApp Option -->
    <div class="bg-white rounded-xl shadow-md border border-gray-100 p-6 text-center hover:shadow-lg transition-shadow">
      <div class="w-16 h-16 mx-auto mb-4 bg-green-50 rounded-full flex items-center justify-center">
        <svg class="w-8 h-8 text-[#128C7E]" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
        </svg>
      </div>
      <h3 class="text-lg font-semibold mb-2">WhatsApp Chat</h3>
      <p class="text-gray-600 mb-4">Chat with us directly on WhatsApp for scheduling flexibility.</p>
      <button id="whatsapp-button" class="inline-flex items-center justify-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-[#128C7E] hover:bg-[#075E54] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#075E54]">
        Chat on WhatsApp
      </button>
    </div>
  </div>
  
  <!-- Back button -->
  <div class="flex justify-start mt-8">
    <button 
      type="button" 
      class="modal-prev-btn flex items-center justify-center px-6 py-3 border border-gray-300 shadow-sm text-base font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
      data-current-step="3"
    >
      <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
      </svg>
      Back to Details
    </button>
  </div>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    // Get insurance type set in the parent container
    const modalElement = document.getElementById('consultation-modal');
    const insuranceType = modalElement?.getAttribute('data-insurance-type') || 'health';
    
    // Determine which cal link to use based on insurance type
    let calLink = "robertkolar/change-health-insurance"; // default to health
    
    if (insuranceType === 'new-health') {
      calLink = "robertkolar/setting-up-health-insurance-in-switzerland";
    } else if (insuranceType === 'pension') {
      calLink = "robertkolar/third-pillar-pension-solutions";
    } else if (insuranceType === 'liability' || insuranceType === 'household') {
      calLink = "robertkolar/household-liability-insurance";
    }
    
    // Get form data if available
    let userData = {};
    try {
      const storedData = sessionStorage.getItem('consultationFormData');
      if (storedData) {
        userData = JSON.parse(storedData);
      }
    } catch (e) {
      console.error('Error reading form data:', e);
    }
    
    // Set up Cal.com button with direct URL approach
    const calButton = document.getElementById('cal-button');
    if (calButton) {
      calButton.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Create URL with prefill parameters
        let calUrl = `https://cal.com/${calLink}?embed=false`;
        
        // Add name if available
        if (userData.name) {
          calUrl += `&name=${encodeURIComponent(userData.name)}`;
        }
        
        // Add email if available
        if (userData.email) {
          calUrl += `&email=${encodeURIComponent(userData.email)}`;
        }
        
        // Add notes if available
        if (userData.topic || userData.phone) {
          const notes = `Topic: ${userData.topic || 'Not specified'}\nPhone: ${userData.phone || 'Not provided'}`;
          calUrl += `&notes=${encodeURIComponent(notes)}`;
        }
        
        // Open Cal in a new window with specific dimensions
        const calWindow = window.open(
          calUrl,
          'CalendarBooking',
          'width=1000,height=700,top=100,left=100,resizable=yes'
        );
        
        // Focus the new window
        if (calWindow) calWindow.focus();
        
        // Set up a message listener for booking completion
        window.addEventListener('message', function(msg) {
          if (msg.data?.type === 'CAL:BOOKING_COMPLETED' || 
              msg.data?.event === 'BOOKING_COMPLETED' || 
              msg.data?.action === 'bookingSuccessful') {
            
            // Close the Cal window
            if (calWindow) calWindow.close();
            
            // Move to thank you step
            const nextStep = 4;
            const stepElements = document.querySelectorAll('.modal-step');
            stepElements.forEach(step => {
              step.classList.add('hidden');
              step.classList.remove('active');
            });
            
            const targetStep = document.getElementById(`consultation-step-${nextStep}`);
            if (targetStep) {
              targetStep.classList.remove('hidden');
              targetStep.classList.add('active');
              
              // Update progress indicators
              document.querySelectorAll('.modal-step-indicator .step').forEach((indicator, index) => {
                const stepNum = index + 1;
                
                if (indicator.querySelector('.h-1')) {
                  indicator.querySelector('.h-1').className = stepNum < nextStep ? 
                    'h-1 bg-red-600 flex-grow rounded-full' : 
                    'h-1 bg-gray-300 flex-grow rounded-full';
                }
                
                if (indicator.querySelector('.w-4')) {
                  if (stepNum < nextStep) {
                    indicator.querySelector('.w-4').className = 'w-4 h-4 flex items-center justify-center rounded-full bg-red-600 border border-red-600 text-white text-xs';
                  } else if (stepNum === nextStep) {
                    indicator.querySelector('.w-4').className = 'w-4 h-4 flex items-center justify-center rounded-full bg-white border border-red-600 text-xs';
                  } else {
                    indicator.querySelector('.w-4').className = 'w-4 h-4 flex items-center justify-center rounded-full bg-white border border-gray-300 text-gray-400 text-xs';
                  }
                }
              });
            }
          }
        }, false);
      });
    }
    
    // WhatsApp button handler
    const whatsappButton = document.getElementById('whatsapp-button');
    if (whatsappButton) {
      whatsappButton.addEventListener('click', function() {
        // Create WhatsApp message with user data
        let message = "Hello, I'd like to schedule a consultation";
        
        if (userData.name) {
          message += ` - my name is ${userData.name}`;
        }
        
        if (userData.topic) {
          message += `, regarding ${userData.topic}`;
        }
        
        message += ". When would be a good time to talk?";
        
        // Open WhatsApp with pre-filled message
        window.open(`https://wa.me/41791552570?text=${encodeURIComponent(message)}`, '_blank');
      });
    }
  });
</script> 