---
// AggregateRating Schema Component for provider pages (not to be used with BlogPosting)
interface Props {
  type: string; // "Product", "LocalBusiness", "Organization", "Service"
  itemName: string;
  itemUrl?: string;
  ratingValue: number | string;
  reviewCount: number | string;
  bestRating?: number | string;
  worstRating?: number | string;
  image?: string;
  description?: string;
}

const { 
  type: requestedType, 
  itemName, 
  itemUrl, 
  ratingValue, 
  reviewCount, 
  bestRating = 5, 
  worstRating = 1,
  image,
  description
} = Astro.props;

// Only use types that are valid for AggregateRating according to Google
const validTypes = ["Product", "LocalBusiness", "Organization", "Service"];
const type = validTypes.includes(requestedType) ? requestedType : "Product";

// Build the schema
const schema: any = {
  "@context": "https://schema.org",
  "@type": type,
  "name": itemName,
  "url": itemUrl || Astro.url.toString(),
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": ratingValue,
    "reviewCount": reviewCount,
    "bestRating": bestRating,
    "worstRating": worstRating
  }
};

// Add optional properties if provided
if (image) schema.image = image;
if (description) schema.description = description;

// Add organization if relevant
if (type === "BlogPosting" || type === "Article" || type === "NewsArticle") {
  schema.publisher = {
    "@type": "Organization",
    "name": "Expat Savvy",
    "logo": {
      "@type": "ImageObject",
      "url": "https://res.cloudinary.com/dphbnwjtx/image/upload/v1740080077/logoexpatsavvy_sykutm.svg",
      "width": 600,
      "height": 60
    }
  };
}
---

<script type="application/ld+json" set:html={JSON.stringify(schema)}></script> 